{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-08T11:14:07.152Z",
    "end": "2025-03-08T11:14:11.977Z",
    "duration": 4825,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "806118a2-81bf-40b9-b5ad-b5c8684042e2",
      "title": "",
      "fullFile": "cypress\\e2e\\loginData.cy.js",
      "file": "cypress\\e2e\\loginData.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4724f003-4bd9-47d9-af85-00edffaf74be",
          "title": "Login Module - Data Driven Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Multiple Login Scenarios",
              "fullTitle": "Login Module - Data Driven Testing Testing Multiple Login Scenarios",
              "timedOut": null,
              "duration": 4690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Load test data from fixture\ncy.fixture(\"data/test-data.xlsx\", \"binary\").then(excelFile => {\n  const workbook = XLSX.read(excelFile, {\n    type: \"binary\"\n  });\n  const sheetName = workbook.SheetNames[0];\n  const testData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\n  testData.forEach(user => {\n    _LoginPage.default.enterUsername(user.username);\n    _LoginPage.default.enterPassword(user.password);\n    _LoginPage.default.clickLogin();\n    // check the expected result based on the test data\n    if (user.expectedResult === \"dashboard\") {\n      // Verify successful login\n      _LoginPage.default.verifyDashboard();\n      // Logout before next test\n      _LoginPage.default.logout();\n    } else if (user.expectedResult === \"Invalid credentials\") {\n      // Verify error message\n      _LoginPage.default.verifyErrorMessage();\n    } else if (user.expectedResult === \"Required\") {\n      // Verify error message\n      _LoginPage.default.verifyRequiredFields();\n    }\n    // Reload page before next test and wait for 1 second\n    cy.reload();\n    cy.wait(2000);\n  });\n});",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > Cannot read properties of undefined (reading 'response')\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > Cannot read properties of undefined (reading 'response')\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://opensource-demo.orangehrmlive.com/web/dist/js/app.js?v=1721393199309:1:11603)\n    at async Dt.request (https://opensource-demo.orangehrmlive.com/web/dist/js/chunk-vendors.js?v=1721393199309:144:77071)\n    at Dt.request (https://opensource-demo.orangehrmlive.com/web/dist/js/chunk-vendors.js?v=1721393199309:144:77164)",
                "diff": null
              },
              "uuid": "b769cb42-e12d-492d-82a9-ee3965e45457",
              "parentUUID": "4724f003-4bd9-47d9-af85-00edffaf74be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b769cb42-e12d-492d-82a9-ee3965e45457"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}